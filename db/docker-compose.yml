# Docker Compose 파일 포맷 버전 지정
version: "1.0"
name: db

services:
  mariadb:
    container_name: db-mariadb
    image: mysql:5.7
    restart: always
    # 컨테이너에서 사용하는 volume 설정으로 대체 가능(옵션)
    volumes:
      - ./mysqldata:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASES=mydb
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    ports:
      - "3306:3306"
    # # 컨테이너 간 네트워크 분리를 위한 추가 설정 부분(옵션)
    # network:
  oracle:
    container_name: db-oracle
    build:
      context: ./01_oracle/
      dockerfile: Dockerfile
    image: db/oracle-xe-11g:latest
    environment:
      - ORACLE_ALLOW_REMOTE=true
    ports:
      - "1521:1521"
    stdin_open: true # docker run -i
    tty: true        # docker run -t
  mysql:
    container_name: db-mysql
    command: --character-set-server=utf8 --collation-server=utf8_general_ci
    build:
      context: ./02_mysql/
      dockerfile: Dockerfile
    image: db/mysql:5.7
    environment:
      - LC_ALL=C.UTF-8
      - MYSQL_DATABASE=testdb
      - MYSQL_ROOT_PASSWORD=1234
    ports:
      - "3306:3306"
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    privileged: true
    restart: always
  mongodb:
    container_name: db-mongodb
    build:
      context: ./03_mongodb/
      dockerfile: Dockerfile
    image: db/mongo:3.6
    environment:
      - MONGO_INITDB_ROOT_USERNAME=testdb
      - MONGO_INITDB_ROOT_PASSWORD=1234
      - MONGO_INITDB_DATABASE=db
    ports:
      - "27017:27017"
    stdin_open: true # docker run -i
    tty: true        # docker run -t